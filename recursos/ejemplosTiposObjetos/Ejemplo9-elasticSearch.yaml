kind: ConfigMap
apiVersion: v1

metadata:
    name: configuracion-es

data:
    cluster.name: MiCluster
    ES_JAVA_OPTS: "-Xms1250m -Xmx1250m" # Podrías cambiar el valor del configmap
                                        # {{}}
---
# Edsto otro solo lo monto por comodidad
kind: ConfigMap
apiVersion: v1

metadata:
    # NO TOCAR ESTE CONFIGMAP!!!!! BAJO PENA CAPITAL .... Tengo el cuchillo preparado 
    name: defaults-es

data:
    # NO TOCAR ESTE CONFIGMAP!!!!!
    discovery.seed_hosts: es-master-svc
    node.master: "false"
    node.data: "false"
    node.ingest: "false"
---
#########################################################################################################
###     MAESTROS
#########################################################################################################

kind: Service
apiVersion: v1

metadata:
    name: es-master-svc

spec:
    type: ClusterIP # Este servicio es privado por naturaleza
    selector:
        app: es-master
    ports:
        - name: externo
          port: 9200
          targetPort: 9200
        - name: interno
          port: 9300
          targetPort: 9300
---
#########################################################################################################

kind: StatefulSet
apiVersion: apps/v1

metadata:
    name: es-master
    labels: 
        app: es-master
        
spec:

    replicas: 3
    # que nombre van a recibir cada una de las replicas que generemos en este statefulset:
    # Los nombres son CONOCIDOS A PRIORI:
    #   es-master-0
    #   es-master-1
    #   es-master-2

    selector:
        matchLabels:
            app: es-master

    serviceName: es-master-svc
    #   es-master-svc
    #   es-master-0.es-master-svc
    #   es-master-1.es-master-svc
    #   es-master-2.es-master-svc
    
    template: # Plantilla del POD 
        metadata:
            labels: 
                app: es-master
                tipo: elasticSearch
        spec:
            containers:
                -   name: elasticsearch
                    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
                    ports:
                        - containerPort: 9200 # Se usa para comunicaciones externas
                        - containerPort: 9300 # Se usa para comunicaciones internas
                    envFrom:
                        - configMapRef: 
                            name: configuracion-es
                        - configMapRef: 
                            name: defaults-es
                    env:
                        - name: node.name # Debe ser único en el cluster
                          valueFrom: 
                            fieldRef:
                                fieldPath: metadata.name # Propiedad name, del metadata del POD que se genere desde esta plantilla

                        - name: discovery.seed_hosts   # Maquinas. las puedo identificar en red a traves de una IP o nombre DNS
                          # A quien le digo yo a este nodo conreto de ES que conoce de antemano
                          value: es-master-0.es-master-svc,es-master-1.es-master-svc
                        - name: cluster.initial_master_nodes   # Habla de nodos (nombre) a nivel de ES
                          value: es-master-0,es-master-1
                        - name: node.master
                          value: "true"
                    volumeMounts:
                        - name: datos-elasticsearch
                          mountPath: /usr/share/elasticsearch/data

    ### Para tener 1 volumen por pod
    volumeClaimTemplates: # Plantilla de peticiones de Volumen 
        -   metadata:
                name: datos-elasticsearch

            spec:
                storageClassName: redundante # Tipo de volumen que necesito (Caractersisticas del volumen)
                resources:
                    requests:
                        storage: 5Gi
                accessModes:
                    - ReadWriteOnce


#########################################################################################################
###     DATAS
#########################################################################################################
---
kind: StatefulSet
apiVersion: apps/v1

metadata:
    name: es-data
    labels: 
        app: es-data
        
spec:

    replicas: 2
    # que nombre van a recibir cada una de las replicas que generemos en este statefulset:
    # Los nombres son CONOCIDOS A PRIORI:
    #   es-data-0
    #   es-data-1

    selector:
        matchLabels:
            app: es-data

    serviceName: es-data-svc
    #   es-data-0.es-master-svc
    #   es-data-1.es-master-svc
    
    template: # Plantilla del POD 
        metadata:
            labels: 
                app: es-data
                tipo: elasticSearch
        spec:
            containers:
                -   name: elasticsearch
                    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
                    ports:
                        - containerPort: 9200 # Se usa para comunicaciones externas
                        - containerPort: 9300 # Se usa para comunicaciones internas
                    envFrom:
                        - configMapRef: 
                            name: configuracion-es
                        - configMapRef: 
                            name: defaults-es
                    env:
                        - name: node.name # Debe ser único en el cluster
                          valueFrom: 
                            fieldRef:
                                fieldPath: metadata.name # Propiedad name, del metadata del POD que se genere desde esta plantilla
                        - name: node.data
                          value: "true"
                    volumeMounts:
                        - name: datos-elasticsearch
                          mountPath: /usr/share/elasticsearch/data

    ### Para tener 1 volumen por pod
    volumeClaimTemplates: # Plantilla de peticiones de Volumen 
        -   metadata:
                name: datos-elasticsearch

            spec:
                storageClassName: redundante # Tipo de volumen que necesito (Caractersisticas del volumen)
                resources:
                    requests:
                        storage: 5Gi
                accessModes:
                    - ReadWriteOnce

#########################################################################################################
###     INGESTA
#########################################################################################################
---

kind: Service
apiVersion: v1

metadata:
    name: es-ingest-svc

spec:
    type: ClusterIP # Este servicio no es privado, ya que se usa por clientes finales.
                    # No obstante esto lo normal será publicarlo / exponerlo mediante un INGRESS CONTROLLER
                    # Por lo tanto lo dejo como ClusterIP
    selector:
        app: es-ingest
    ports:
        - name: externo
          port: 9200
          targetPort: 9200
        - name: interno
          port: 9300
          targetPort: 9300
---
kind: StatefulSet
apiVersion: apps/v1

metadata:
    name: es-ingest
    labels: 
        app: es-ingest
        
spec:

    replicas: 2
    # que nombre van a recibir cada una de las replicas que generemos en este statefulset:
    # Los nombres son CONOCIDOS A PRIORI:
    #   es-ingest-0
    #   es-ingest-1

    selector:
        matchLabels:
            app: es-ingest

    serviceName: es-ingest-svc
    #   es-ingest-0.es-master-svc
    #   es-ingest-1.es-master-svc
    
    template: # Plantilla del POD 
        metadata:
            labels: 
                app: es-ingest
                tipo: elasticSearch

        spec:
            containers:
                -   name: elasticsearch
                    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
                    ports:
                        - containerPort: 9200 # Se usa para comunicaciones externas
                        - containerPort: 9300 # Se usa para comunicaciones internas
                    envFrom:
                        - configMapRef: 
                            name: configuracion-es
                        - configMapRef: 
                            name: defaults-es
                    env:
                        - name: node.name # Debe ser único en el cluster
                          valueFrom: 
                            fieldRef:
                                fieldPath: metadata.name # Propiedad name, del metadata del POD que se genere desde esta plantilla
                        - name: node.ingest
                          value: "true"
                    volumeMounts:
                        - name: datos-elasticsearch
                          mountPath: /usr/share/elasticsearch/data

    ### Para tener 1 volumen por pod
    volumeClaimTemplates: # Plantilla de peticiones de Volumen 
        -   metadata:
                name: datos-elasticsearch

            spec:
                storageClassName: redundante # Tipo de volumen que necesito (Caractersisticas del volumen)
                resources:
                    requests:
                        storage: 5Gi
                accessModes:
                    - ReadWriteOnce

#########################################################################################################
###     COORDINATOR
#########################################################################################################
---

kind: Service
apiVersion: v1

metadata:
    name: es-coordinator-svc

spec:
    type: ClusterIP # Este servicio no es privado, ya que se usa por clientes finales.
                    # No obstante esto lo normal será publicarlo / exponerlo mediante un INGRESS CONTROLLER
                    # Por lo tanto lo dejo como ClusterIP
    selector:
        app: es-coordinator
    ports:
        - name: externo
          port: 9200
          targetPort: 9200
        - name: interno
          port: 9300
          targetPort: 9300
---
kind: StatefulSet
apiVersion: apps/v1

metadata:
    name: es-coordinator
    labels: 
        app: es-coordinator
        
spec:

    replicas: 2
    # que nombre van a recibir cada una de las replicas que generemos en este statefulset:
    # Los nombres son CONOCIDOS A PRIORI:
    #   es-coordinator-0
    #   es-coordinator-1

    selector:
        matchLabels:
            app: es-coordinator

    serviceName: es-coordinator-svc
    #   es-coordinator-0.es-master-svc
    #   es-coordinator-1.es-master-svc
    
    template: # Plantilla del POD 
        metadata:
            labels: 
                app: es-coordinator
                tipo: elasticSearch

        spec:
            containers:
                -   name: elasticsearch
                    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
                    ports:
                        - containerPort: 9200 # Se usa para comunicaciones externas
                        - containerPort: 9300 # Se usa para comunicaciones internas
                    envFrom:
                        - configMapRef: 
                            name: configuracion-es
                        - configMapRef: 
                            name: defaults-es
                    env:
                        - name: node.name # Debe ser único en el cluster
                          valueFrom: 
                            fieldRef:
                                fieldPath: metadata.name # Propiedad name, del metadata del POD que se genere desde esta plantilla
                    volumeMounts:
                        - name: datos-elasticsearch
                          mountPath: /usr/share/elasticsearch/data

    ### Para tener 1 volumen por pod
    volumeClaimTemplates: # Plantilla de peticiones de Volumen 
        -   metadata:
                name: datos-elasticsearch

            spec:
                storageClassName: redundante # Tipo de volumen que necesito (Caractersisticas del volumen)
                resources:
                    requests:
                        storage: 5Gi
                accessModes:
                    - ReadWriteOnce
